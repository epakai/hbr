# Example hbr config file with annotated keys
# string,boolean,integer,double, _list of aformentioned
#
# this example config has the format
# [type] (optional/required) <{default},option1,option2>
#

[CONFIG]
# [string] (required) <{mkv},m4v>
format=mkv
# [boolean] (required) <true, {false}>
markers=true

# [string] (optional) <{off},strict,loose>
# we don't handle custom option
picture_anamorphic=strict
# [boolean] (optional) <true, {false}>
picture_autocrop=
# [int] (optional) <...,{15},...>
picture_loose_crop=
# [int] (optional) <{0},...>
picture_crop_top=
# [int] (optional) <{0},...>
picture_crop_bottom=
# [int] (optional) <{0},...>
picture_crop_left=
# [int] (optional) <{0},...>
picture_crop_right=

# [string] (optional) <{none},default,fast,slow,slower,bob>
filter_deinterlace=none
# [string] (optional) <{none},default,fast,bob>
filter_decomb=
# [string] (optional) <{none},default,ultralight,light,medium,strong>
filter_denoise=
# [boolean] (optional) <true,{false}>
filter_grayscale=
# [string_list] (optional) <{none},vertical_flip,horizontal_flip,rotate_clockwise>
filter_rotate=

# [string] (required) <{av_aac},{mp3},fdk_aac,fdk_haac,copy:aac,ac3,copy:ac3,copy:dts,copy:dtshd,copy:mp3,vorbis,flac16,flac24,copy>
# default depends on container format (mp4=av_aac, mkv=mp3). fdk codecs are not compiled in by default
audio_encoder=av_aac 
# [int] (optional, mutually exclusive with audio_quality) <32,40,48,56,64,80,96,112,128,160,192,224,256,320,384,448,512,576,640,768,960,1152,1344,1536,2304,3072,4608,6144>
# defaults and available bitrates depend on audio_encoder with lossless encoder having none
audio_bitrate=192 
# [double] (optional, mutually exclusive with audio_bitrate)
# defaults and range depends on audio_encoder, only supported by some encoders
audio_quality=

# [string] (required) <x264,x265,{mpeg4},mpeg2,VP8,theora>
video_encoder=x264
# [string] (optional) <{source},5,10,12,15,23.976,24,25,29.97,30,50,59.94,60>
video_framerate=
# [string] (optional) <constant, {variable}, peak>
# defaults to variable unless a video_framerate specified
video_framerate_control=
# [int] (required, mutually exclusive with video_bitrate) <range depends on video_encoder>
# default is codec dependent
video_quality=18
# [int] (required, mutually exclusive with video_quality) <0-20000>
# default is codec dependent
video_bitrate=2500
# [boolean] (optional, depends on video_bitrate being set) <true, {false}>
video_two_pass=
# [boolean] (optional, depends on video_two_pass being true) <true, {false}>
# only applies to x264 codec
video_turbo=
